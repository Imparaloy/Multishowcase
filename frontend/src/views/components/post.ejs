<% const userContext = typeof currentUser !== 'undefined' ? currentUser : null; %>
<% const isOwner = userContext && typeof username !== 'undefined' && userContext.username === username; %>
<% const isAdmin = userContext && userContext.role === 'admin'; %>
<% const canDeleteFromProps = typeof canDelete !== 'undefined' ? canDelete : null; %>
<% const canDeletePost = canDeleteFromProps !== null ? canDeleteFromProps : (isOwner || isAdmin); %>
<div class="bg-[#182244] rounded-xl p-4 mb-4 text-white">
  <!-- Header -->
  <div class="flex items-center justify-between">
    <div class="flex items-center space-x-3">
      <div class="w-10 h-10 bg-gray-500 rounded-full"></div>
      <div>
        <span class="font-bold"><%= name %></span>
        <span class="text-gray-400 ml-1">@<%= username %></span>
      </div>
    </div>
    <details class="relative dropdown">
      <summary
        class="flex items-center justify-center w-8 h-8 text-gray-400 cursor-pointer hover:text-white transition-colors rounded-full focus:outline-none focus-visible:ring-2 focus-visible:ring-purple-400"
        role="button"
        aria-label="Post actions"
      >
        •••
      </summary>
      <div class="absolute right-0 mt-2 w-44 bg-[#1f2a50] border border-gray-700 rounded-lg shadow-lg py-2 z-10">
        <button type="button" class="w-full px-4 py-2 text-left text-sm text-gray-200 hover:bg-[#252f58]">Report Post</button>
        <% if (canDeletePost) { %>
          <div class="border-t border-gray-700 my-1"></div>
          <button type="button" class="w-full px-4 py-2 text-left text-sm text-red-400 hover:bg-[#252f58] hover:text-red-300" onclick="deletePost('<%= id %>')">Delete Post</button>
        <% } %>
      </div>
    </details>
  </div>

  <!-- Content -->
  <div class="mt-3 text-sm leading-relaxed text-gray-200"><%= content %></div>

  <!-- Actions -->
  <div class="flex justify-start mt-4 text-gray-400 text-sm" style="column-gap:100px;">
  <div class="flex items-center space-x-1 cursor-pointer hover:text-white" <% if (typeof id !== 'undefined') { %>onclick="window.location.href='/comment?id=<%= id %>'"<% } else { %>onclick="window.location.href='/comment'"<% } %>>
      <i data-feather="message-circle" class="w-4 h-4"></i>
      <span><%= comments %></span>
    </div>
  <div class="flex items-center space-x-1 cursor-pointer hover:text-white" <% if (typeof id !== 'undefined') { %>onclick="window.location.href='/comment?id=<%= id %>'"<% } else { %>onclick="window.location.href='/comment'"<% } %>>
      <i data-feather="heart" class="w-4 h-4"></i>
      <span><%= likes %></span>
    </div>
  </div>
</div>

<script>
  function deletePost(postId) {
    if (confirm('Are you sure you want to delete this post?')) {
      fetch(`/api/posts/${postId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Failed to delete post');
        }
        return response.json();
      })
      .then(data => {
        if (data.success) {
          // Remove the post element from the DOM
          const postElement = document.querySelector(`[data-post-id="${postId}"]`);
          if (postElement) {
            postElement.remove();
          } else {
            // Fallback: reload the page if we can't find the element
            window.location.reload();
          }
        } else {
          alert('Failed to delete post: ' + (data.error || 'Unknown error'));
        }
      })
      .catch(error => {
        console.error('Error deleting post:', error);
        alert('Failed to delete post. Please try again.');
      });
    }
  }
</script>
