<!DOCTYPE html>
<html lang="th">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<title><%= title || 'Groups' %></title>
		<script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
		<script src="https://unpkg.com/feather-icons"></script>
	</head>
	<body class="bg-[#0f1533] text-white font-sans">
		<% const activePage = 'groups'; %>
		<div class="flex mx-auto min-h-screen">
			<!-- Sidebar -->
			<%- include('components/sidebar', { activePage: 'groups', currentUser: typeof currentUser !== 'undefined' ? currentUser : null }) %>

					<main class="flex-1 border-x p-2 rounded border-gray-700">
						<div class="px-4 pt-6 space-y-6">
							<!-- Header & Controls -->
							<section class="bg-[#182244] rounded-2xl p-6 border border-gray-700/60 space-y-4">
								<div class="flex items-center justify-between gap-3 flex-wrap">
									<h2 class="text-xl font-semibold">กลุ่มทั้งหมด</h2>
									<div class="flex items-center gap-2 flex-wrap">
										<div class="relative">
											<i data-feather="search" class="w-4 h-4 text-gray-300 absolute left-3 top-1/2 -translate-y-1/2"></i>
											<input id="groupSearch" type="text" placeholder="ค้นหากลุ่ม" class="pl-9 pr-3 py-2 bg-[#11193a] border border-gray-600 rounded-full text-sm outline-none focus:border-purple-400 text-white placeholder:text-gray-400 min-w-[220px]" />
										</div>
										<select id="sortSelect" class="px-3 py-2 bg-[#11193a] border border-gray-600 rounded-full text-sm outline-none focus:border-purple-400 text-white">
											<option value="newest">ใหม่ล่าสุด</option>
											<option value="oldest">เก่าสุด</option>
											<option value="name">ชื่อ (A-Z)</option>
										</select>
										<button id="openCreate" type="button" class="px-4 py-2 rounded-full bg-purple-600 hover:bg-purple-700 text-sm font-semibold flex items-center gap-2">
											<i data-feather="plus" class="w-4 h-4"></i>
											สร้างกลุ่มใหม่
										</button>
									</div>
								</div>
								<div class="flex gap-2 border-t border-gray-700 pt-4">
									<button data-tab="all" class="tab-btn px-4 py-2 rounded-full text-sm bg-purple-500/30 text-white border border-purple-400">ทั้งหมด</button>
									<button data-tab="mine" class="tab-btn px-4 py-2 rounded-full text-sm bg-[#1f2e5f] text-gray-300 hover:text-white hover:bg-purple-500/20">ของฉัน</button>
								</div>
							</section>

					<!-- Group list -->
					<section class="bg-[#182244] rounded-2xl p-6 border border-gray-700/60">
						<% if (!groups || groups.length === 0) { %>
							<div id="emptyState" class="text-center py-10 text-gray-300">ยังไม่มีกลุ่ม เริ่มต้นสร้างกลุ่มแรกของคุณได้เลย</div>
						<% } else { %>
											  <div id="groupList" class="grid gap-4 grid-cols-1">
												<% const viewer = typeof currentUser !== 'undefined' ? currentUser : null; %>
												<% groups.forEach(g => { 
														 const created = new Date(g.createdAt || Date.now());
														 const isMine = viewer && (g.createdBy === viewer.username || (Array.isArray(g.members) && g.members.some(m => m.username === viewer.username)));
														 const membersCount = Array.isArray(g.members) ? g.members.length : 0;
												%>
													<div class="bg-[#1f2e5f] rounded-xl p-4 border border-gray-600/60 hover:border-purple-400/50 transition cursor-pointer"
															 data-name="<%- g.name.toLowerCase() %>"
															 data-desc="<%- (g.description || '').toLowerCase() %>"
															 data-created-at="<%= created.getTime() %>"
															 data-members="<%= membersCount %>"
															 data-is-mine="<%= isMine ? '1' : '0' %>"
															 onclick="window.location.href='/groups/<%= g.id %>'">
																			<div class="flex items-start justify-between gap-3">
																				<div class="flex-1">
																<h3 class="text-lg font-semibold text-white"><%= g.name %></h3>
																<% if (g.description) { %>
																	<p class="mt-1 text-sm text-gray-200"><%= g.description %></p>
																<% } %>
																				</div>
																				<% if (isMine) { %>
																					<span class="px-3 py-1 rounded-full bg-green-600/30 text-green-200 border border-green-500/40 text-xs">Member</span>
																				<% } else { %>
																					<button type="button" class="px-3 py-1 rounded-full bg-gray-700 hover:bg-gray-600 text-xs" onclick="event.stopPropagation(); window.location.href='/groups/<%= g.id %>'">View</button>
																				<% } %>
														</div>
														<div class="mt-3 flex items-center gap-4 text-xs text-gray-300">
															<span class="inline-flex items-center gap-1"><i data-feather="users" class="w-4 h-4"></i><%= membersCount %> สมาชิก</span>
															<span class="inline-flex items-center gap-1"><i data-feather="calendar" class="w-4 h-4"></i><%= created.toLocaleDateString('th-TH') %></span>
															<% if (g.createdBy) { %>
																<span class="inline-flex items-center gap-1"><i data-feather="user" class="w-4 h-4"></i>owner: <%= g.createdBy %></span>
															<% } %>
														</div>
														<% if (Array.isArray(g.tags) && g.tags.length) { %>
															<div class="mt-2 flex flex-wrap gap-2">
																<% g.tags.forEach(function(slug){
																	const tagLabel = (typeof exploreTags !== 'undefined' && Array.isArray(exploreTags)) ?
																		(exploreTags.find(t => t.slug === slug)?.label || slug) : slug;
																%>
																	<span class="px-2 py-1 rounded-full text-xs bg-purple-500/20 text-purple-200 border border-purple-400/40 hover:bg-purple-500/30 transition-colors cursor-default" title="<%= tagLabel %>">
																		<%= tagLabel %>
																	</span>
																<% }) %>
															</div>
														<% } %>
													</div>
												<% }) %>
											</div>
						<% } %>
					</section>
				</div>
			</main>
		</div>

		<!-- Modal: Create Group -->
		<div id="backdrop" class="fixed inset-0 z-50 hidden items-center justify-center bg-black/60 px-4" aria-hidden="true">
			<div class="w-full max-w-lg rounded-2xl border border-gray-700/60 bg-[#182244] p-5 shadow-2xl" role="dialog" aria-modal="true" aria-labelledby="dlgTitle">
				<h3 id="dlgTitle" class="text-lg font-semibold mb-3">สร้างกลุ่มใหม่</h3>
						<form id="createForm" class="space-y-3">
					<div>
						<label for="name" class="block text-xs uppercase text-gray-400 mb-1">ชื่อกลุ่ม</label>
						<input type="text" id="name" name="name" required placeholder="เช่น Game Dev Squad" class="w-full bg-[#11193a] border border-gray-600 rounded-lg px-3 py-2 text-sm outline-none focus:border-purple-400 text-white placeholder:text-gray-400" />
					</div>
					<div>
						<label for="description" class="block text-xs uppercase text-gray-400 mb-1">คำอธิบาย</label>
						<textarea id="description" name="description" placeholder="บอกจุดประสงค์ของกลุ่มโดยย่อ" class="w-full min-h-[96px] bg-[#11193a] border border-gray-600 rounded-lg px-3 py-2 text-sm outline-none focus:border-purple-400 text-white placeholder:text-gray-400"></textarea>
					</div>
							<div>
								<p class="block text-xs uppercase text-gray-400 mb-2">แท็กของกลุ่ม</p>
									<div class="flex flex-wrap gap-2">
										<% const _tags = (typeof exploreTags !== 'undefined' && Array.isArray(exploreTags)) ? exploreTags : []; _tags.forEach(function(tag){ %>
										<label class="inline-flex items-center gap-2 px-3 py-2 rounded-full bg-[#11193a] border border-gray-600 text-sm cursor-pointer hover:border-purple-400">
											<input type="checkbox" name="tags" value="<%= tag.slug %>" class="accent-purple-500">
											<span class="text-gray-200"><%= tag.label %></span>
										</label>
										<% }) %>
								</div>
							</div>
					<div id="errorBox" class="hidden text-sm text-red-300"></div>
					<div class="flex items-center justify-end gap-2 pt-2">
						<button type="button" id="cancelBtn" class="px-4 py-2 rounded-full bg-gray-700 hover:bg-gray-600 text-sm">ยกเลิก</button>
						<button type="submit" id="submitBtn" class="px-4 py-2 rounded-full bg-purple-600 hover:bg-purple-700 text-sm font-semibold">สร้างกลุ่ม</button>
					</div>
				</form>
			</div>
		</div>

			<script>
				feather.replace();
			const $ = (sel) => document.querySelector(sel);
			const openBtn = $('#openCreate');
			const backdrop = $('#backdrop');
			const cancelBtn = $('#cancelBtn');
			const form = $('#createForm');
			const errorBox = $('#errorBox');
			const submitBtn = $('#submitBtn');
			const groupList = $('#groupList');
			const emptyState = $('#emptyState');
				const searchInput = $('#groupSearch');
				const sortSelect = $('#sortSelect');
				const tabBtns = Array.from(document.querySelectorAll('.tab-btn'));

				function normalize(s){ return (s || '').toString().toLowerCase(); }

				function applyFilterSort(){
					const q = normalize(searchInput?.value || '');
					const activeTab = (tabBtns.find(b=>b.classList.contains('bg-purple-500/30'))?.dataset.tab) || 'all';
					const sortBy = sortSelect?.value || 'newest';

					const cards = Array.from(groupList?.children || []);
					// Filter
					cards.forEach(card => {
						const name = card.getAttribute('data-name') || '';
						const desc = card.getAttribute('data-desc') || '';
						const isMine = card.getAttribute('data-is-mine') === '1';
						let visible = true;
						if (q) visible = name.includes(q) || desc.includes(q);
						if (visible && activeTab === 'mine') visible = isMine;
						card.style.display = visible ? '' : 'none';
					});

					// Sort (only visible ones are relevant)
					const visibleCards = cards.filter(c => c.style.display !== 'none');
					visibleCards.sort((a,b)=>{
						if (sortBy === 'name'){
							return (a.getAttribute('data-name')||'').localeCompare(b.getAttribute('data-name')||'');
						}
						const ta = Number(a.getAttribute('data-created-at')) || 0;
						const tb = Number(b.getAttribute('data-created-at')) || 0;
						return sortBy === 'oldest' ? (ta - tb) : (tb - ta);
					});
					// Re-append in new order
					visibleCards.forEach(card => groupList.appendChild(card));
				}

				tabBtns.forEach(btn => btn.addEventListener('click', () => {
					tabBtns.forEach(b=>b.className = 'tab-btn px-4 py-2 rounded-full text-sm bg-[#1f2e5f] text-gray-300 hover:text-white hover:bg-purple-500/20');
					btn.className = 'tab-btn px-4 py-2 rounded-full text-sm bg-purple-500/30 text-white border border-purple-400';
					applyFilterSort();
				}));
				searchInput?.addEventListener('input', applyFilterSort);
				sortSelect?.addEventListener('change', applyFilterSort);

			function openModal() {
				errorBox.classList.add('hidden');
				errorBox.textContent = '';
				backdrop.classList.remove('hidden');
				backdrop.classList.add('flex');
				document.getElementById('name')?.focus();
			}
			function closeModal() {
				backdrop.classList.add('hidden');
				backdrop.classList.remove('flex');
			}

			openBtn?.addEventListener('click', openModal);
			cancelBtn?.addEventListener('click', closeModal);
			backdrop?.addEventListener('click', (e) => { if (e.target === backdrop) closeModal(); });

			form?.addEventListener('submit', async (e) => {
				e.preventDefault();
				errorBox.classList.add('hidden');
				submitBtn.disabled = true;
				submitBtn.textContent = 'กำลังสร้าง...';
				try {
								const formData = new FormData(form);
								const payload = Object.fromEntries(formData.entries());
								payload.tags = Array.from(form.querySelectorAll('input[name="tags"]:checked')).map(el => el.value);
					const res = await fetch('/groups', {
						method: 'POST',
						headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },
						body: JSON.stringify(payload)
					});
					const data = await res.json().catch(() => ({}));
					if (!res.ok || !data.ok) throw new Error(data.message || 'สร้างกลุ่มไม่สำเร็จ');

						// Optimistic UI: add card
						const createdTime = new Date(data.group?.createdAt || Date.now());
						const card = document.createElement('div');
						card.className = 'bg-[#1f2e5f] rounded-xl p-4 border border-gray-600/60 hover:border-purple-400/50 transition';
						card.setAttribute('data-name', (payload.name || '').toLowerCase());
						card.setAttribute('data-desc', (payload.description || '').toLowerCase());
						card.setAttribute('data-created-at', String(createdTime.getTime()));
						card.setAttribute('data-members', '0');
						card.setAttribute('data-is-mine', '1');
					const title = document.createElement('h3');
					title.className = 'text-lg font-semibold text-white';
					title.textContent = data.group?.name || payload.name;
					card.appendChild(title);
								if (payload.description) {
						const p = document.createElement('p');
						p.className = 'mt-1 text-sm text-gray-200';
						p.textContent = payload.description;
						card.appendChild(p);
					}
								// tags chips
								if (Array.isArray(payload.tags) && payload.tags.length) {
									const chips = document.createElement('div');
									chips.className = 'mt-2 flex flex-wrap gap-2';
									payload.tags.forEach(function(slug){
										const chip = document.createElement('span');
										chip.className = 'px-2 py-1 rounded-full text-xs bg-purple-500/20 text-purple-200 border border-purple-400/40 hover:bg-purple-500/30 transition-colors cursor-default';
										chip.textContent = slug;
										chip.title = slug;
										chips.appendChild(chip);
									});
									card.appendChild(chips);
								}
						const meta = document.createElement('div');
						meta.className = 'mt-2 text-xs text-gray-300';
						meta.textContent = `สร้างเมื่อ: ${createdTime.toLocaleString('th-TH')}`;
					card.appendChild(meta);

								if (emptyState) emptyState.remove();
								if (groupList) {
									groupList.prepend(card);
								} else {
									const container = document.createElement('div');
									container.id = 'groupList';
									container.className = 'grid gap-4 grid-cols-1';
									container.appendChild(card);
									document.querySelector('main section.bg\\\[\\#182244\\\]:nth-of-type(2)')?.appendChild(container);
								}

					form.reset();
					closeModal();
								feather.replace();
								applyFilterSort();
				} catch (err) {
					errorBox.textContent = err.message || 'เกิดข้อผิดพลาด';
					errorBox.classList.remove('hidden');
				} finally {
					submitBtn.disabled = false;
					submitBtn.textContent = 'สร้างกลุ่ม';
				}
			});

						// Initial UI pass
						applyFilterSort();
		</script>
	</body>
</html>
