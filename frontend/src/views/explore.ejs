<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Explore</title>
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
    <script src="https://unpkg.com/feather-icons"></script>
  </head>
  <body class="bg-[#0f1533] text-white font-sans">
    <div class="flex mx-auto min-h-screen">
      <!-- Sidebar -->
      <%- include('components/sidebar') %>
  <main class="flex-1 border-x p-2 rounded border-gray-700">
        <% const currentTag = typeof activeTag !== 'undefined' ? activeTag : 'all'; %>
        <% const tagListSafe = Array.isArray(tagList) ? tagList : []; %>
        <div class="px-4 pt-6">
          <h1 class="text-2xl font-semibold">Explore Posts</h1>
          <p class="text-sm text-gray-400 mt-2">Browse all posts or focus on a specific category.</p>
        </div>
        <div class="flex px-4 mt-4 border-b border-gray-700 overflow-x-auto space-x-2">
          <% if (tagListSafe && tagListSafe.length) { %>
            <% tagListSafe.forEach(function(tagItem) {
                 const isActive = currentTag === tagItem.slug;
            %>
              <a
                href="/explore?tag=<%= tagItem.slug %>"
                data-explore-tag="<%= tagItem.slug %>"
                class="py-3 px-4 text-center border-b-2 -mb-px transition <%= isActive ? 'border-purple-400 text-white-500 font-semibold' : 'border-transparent text-gray-400 hover:text-white hover:border-purple-400' %>"
                <%= isActive ? 'aria-current="page"' : '' %>
              >
                <%= tagItem.label %>
              </a>
            <% }) %>
          <% } %>
        </div>
        <!-- Feed Posts -->
        <div
          id="explore-feed"
          class="p-4 space-y-4"
          data-tag="<%= currentTag %>"
        >
          <% const hasInitialPosts = Array.isArray(feed) && feed.length > 0; %>
          <% if (hasInitialPosts) { %>
            <% feed.forEach(post => { %>
              <div
                data-post-id="<%= post.post_id || post.id %>"
                data-post-category="<%= (post.categorySlug || 'all') %>"
              >
                <%- include('components/post', {
                  id: post.post_id || post.id,
                  name: post.author_display_name || post.name || post.display_name,
                  username: post.author_username || post.username,
                  body: post.body || post.content || '',
                  media: Array.isArray(post.media) ? post.media : [],
                  comments: post.comments || 0,
                  likes: post.likes || 0,
                  primaryMedia: null,
                  canDelete: false,
                  currentUser: typeof currentUser !== 'undefined' ? currentUser : null
                }) %>
              </div>
            <% }) %>
          <% } else { %>
            <p class="text-center text-gray-400 py-6">No posts available yet.</p>
          <% } %>
          <div id="explore-empty" class="text-center text-gray-400 py-6 <%= hasInitialPosts ? 'hidden' : '' %>">
            No posts found for this category.
          </div>
        </div>
      </main>
    </div>
    <script>
      feather.replace();
      (function() {
        const feedEl = document.getElementById('explore-feed');
        if (!feedEl) return;

        const emptyEl = document.getElementById('explore-empty');
        const postNodes = Array.from(feedEl.querySelectorAll('[data-post-category]'));
        const tabLinks = Array.from(document.querySelectorAll('[data-explore-tag]'));
        const validTags = new Set(['all']);

        tabLinks.forEach((link) => {
          const slug = (link.dataset.exploreTag || '').toLowerCase();
          if (slug) validTags.add(slug);
        });

        const ACTIVE_CLASSES = ['border-purple-400', 'text-white-500', 'font-semibold'];
        const INACTIVE_CLASSES = ['border-transparent', 'text-gray-400'];
        const INACTIVE_HOVER = ['hover:text-white', 'hover:border-purple-400'];

        const normalizeTag = (tag) => {
          const candidate = (tag || '').toLowerCase();
          return validTags.has(candidate) ? candidate : 'all';
        };

        const updateEmptyState = (visibleCount) => {
          if (!emptyEl) return;
          emptyEl.classList.toggle('hidden', visibleCount > 0);
        };

        const updateTabs = (activeTag) => {
          tabLinks.forEach((link) => {
            const isActive = (link.dataset.exploreTag || '').toLowerCase() === activeTag;
            if (isActive) {
              link.classList.add(...ACTIVE_CLASSES);
              link.classList.remove(...INACTIVE_CLASSES);
              link.classList.remove(...INACTIVE_HOVER);
              link.setAttribute('aria-current', 'page');
            } else {
              link.classList.remove(...ACTIVE_CLASSES);
              link.classList.add(...INACTIVE_CLASSES);
              link.classList.add(...INACTIVE_HOVER);
              link.removeAttribute('aria-current');
            }
          });
        };

        const filterPosts = (tag) => {
          let visibleCount = 0;
          postNodes.forEach((node) => {
            const category = (node.dataset.postCategory || 'all').toLowerCase();
            const matches = tag === 'all' || category === tag;
            node.classList.toggle('hidden', !matches);
            if (matches) visibleCount += 1;
          });
          updateEmptyState(visibleCount);
        };

        const applyTag = (tag) => {
          const normalized = normalizeTag(tag);
          feedEl.dataset.tag = normalized;
          filterPosts(normalized);
          updateTabs(normalized);
          return normalized;
        };

        const urlParams = new URLSearchParams(window.location.search);
        const initialParamTag = urlParams.get('tag');
        const initialTag = applyTag(initialParamTag || feedEl.dataset.tag || 'all');

        tabLinks.forEach((link) => {
          link.addEventListener('click', (event) => {
            event.preventDefault();
            const nextTag = applyTag(link.dataset.exploreTag);
            const url = new URL(window.location.href);
            if (nextTag === 'all') {
              url.searchParams.delete('tag');
            } else {
              url.searchParams.set('tag', nextTag);
            }
            window.history.replaceState({}, '', url.toString());
          });
        });

        if (!initialTag) {
          updateTabs('all');
          filterPosts('all');
        }
      })();
    </script>
  </body>
</html>
