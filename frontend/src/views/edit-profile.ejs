<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<title>Edit Profile</title>
		<script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
		<script src="https://unpkg.com/feather-icons"></script>
	</head>
	<body class="bg-[#0f1533] text-white font-sans">
		<div class="flex mx-auto min-h-screen">
			<!-- Sidebar -->
			<%- include('components/sidebar') %>

			<main class="flex-1 border-x p-2 rounded border-gray-700">
				<% const meUser = typeof me !== 'undefined' ? me : { name: 'Name', username: 'username' }; %>
				<% const viewer = typeof currentUser !== 'undefined' ? currentUser : null; %>

				<!-- Edit Profile Header -->
				<section class="px-4 pt-6">
					<div class="bg-[#182244] rounded-2xl p-6 border border-gray-700/60">
						<div class="flex items-center gap-4 mb-6">
							<a href="/profile" class="text-gray-400 hover:text-white">
								<i data-feather="arrow-left" class="w-5 h-5"></i>
							</a>
							<h1 class="text-2xl font-bold">Edit Profile</h1>
						</div>

						<form id="editProfileForm" class="space-y-6">
							<!-- Profile Picture (Display Only) -->
							<div class="flex items-center gap-4">
								<div class="w-20 h-20 bg-gray-500 rounded-full flex items-center justify-center">
									<i data-feather="user" class="w-8 h-8 text-gray-300"></i>
								</div>
								<div>
									<p class="text-sm text-gray-400">Profile picture</p>
									<p class="text-xs text-gray-500 mt-1">Profile picture editing is not available yet</p>
								</div>
							</div>

							<!-- Display Name -->
							<div>
								<label for="displayName" class="block text-sm font-medium text-gray-300 mb-2">
									Display Name
								</label>
								<input
									type="text"
									id="displayName"
									name="displayName"
									value="<%= meUser.name || '' %>"
									class="w-full px-4 py-2 bg-[#1f2e5f] border border-gray-600 rounded-lg focus:outline-none focus:border-purple-500 text-white"
									placeholder="Enter your display name"
									required
								/>
							</div>

							<!-- Username (read-only) -->
							<div>
								<label for="username" class="block text-sm font-medium text-gray-300 mb-2">
									Username
								</label>
								<input
									type="text"
									id="username"
									value="@<%= meUser.username %>"
									readonly
									class="w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-gray-400 cursor-not-allowed"
								/>
								<p class="text-xs text-gray-400 mt-1">Username cannot be changed</p>
							</div>

							<!-- Bio -->
							<div>
								<label for="bio" class="block text-sm font-medium text-gray-300 mb-2">
									Bio
								</label>
								<textarea
									id="bio"
									name="bio"
									rows="4"
									class="w-full px-4 py-2 bg-[#1f2e5f] border border-gray-600 rounded-lg focus:outline-none focus:border-purple-500 text-white resize-none"
									placeholder="Tell us about yourself"
									maxlength="160"
								><%= meUser.bio || '' %></textarea>
								<p class="text-xs text-gray-400 mt-1">
									<span id="bioCount"><%= meUser.bio ? meUser.bio.length : 0 %></span>/160 characters
								</p>
							</div>

							<!-- Email -->
							<div>
								<label for="email" class="block text-sm font-medium text-gray-300 mb-2">
									Email
								</label>
								<input
									type="email"
									id="email"
									name="email"
									value="<%= meUser.email || '' %>"
									class="w-full px-4 py-2 bg-[#1f2e5f] border border-gray-600 rounded-lg focus:outline-none focus:border-purple-500 text-white"
									placeholder="your@email.com"
								/>
							</div>

							<!-- Form Actions -->
							<div class="flex gap-3 pt-4">
								<button
									type="submit"
									class="px-6 py-2 rounded-full bg-purple-600 hover:bg-purple-700 text-sm font-semibold flex items-center gap-2"
								>
									<i data-feather="save" class="w-4 h-4"></i>
									Save changes
								</button>
								<a
									href="/profile"
									class="px-6 py-2 rounded-full bg-gray-700 hover:bg-gray-600 text-sm font-semibold"
								>
									Cancel
								</a>
							</div>
						</form>

						<!-- Success/Error Messages -->
						<div id="message" class="hidden mt-4 p-4 rounded-lg"></div>
					</div>
				</section>

				<!-- Delete Account Section -->
				<section class="px-4 pt-6">
					<div class="bg-[#182244] rounded-2xl p-6 border border-gray-700/60">
						<h2 class="text-xl font-bold mb-4">Danger Zone</h2>
						<p class="text-sm text-gray-400 mb-4">
							Once you delete your account, there is no going back. Please be certain.
						</p>
						<button
							type="button"
							id="deleteAccountBtn"
							class="px-6 py-2 rounded-full bg-red-600 hover:bg-red-700 text-sm font-semibold flex items-center gap-2"
						>
							<i data-feather="trash-2" class="w-4 h-4"></i>
							Delete account
						</button>
					</div>
				</section>
			</main>
		</div>

		<script>
			feather.replace();

			// Bio character counter
			const bioTextarea = document.getElementById('bio');
			const bioCount = document.getElementById('bioCount');
			
			bioTextarea.addEventListener('input', function() {
				bioCount.textContent = this.value.length;
			});

			// Form validation
			function validateForm(data) {
				const errors = [];
				
				// Display name validation
				if (!data.displayName || data.displayName.trim().length === 0) {
					errors.push('Display name is required');
				} else if (data.displayName.trim().length > 50) {
					errors.push('Display name must be 50 characters or less');
				}
				
				// Email validation
				if (data.email && data.email.trim() !== '') {
					const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
					if (!emailRegex.test(data.email)) {
						errors.push('Please enter a valid email address');
					}
				}
				
				// Bio validation
				if (data.bio && data.bio.length > 160) {
					errors.push('Bio must be 160 characters or less');
				}
				
				return errors;
			}

			// Form submission
			const editProfileForm = document.getElementById('editProfileForm');
			const messageDiv = document.getElementById('message');

			editProfileForm.addEventListener('submit', async function(e) {
				e.preventDefault();
				
				// Clear previous messages
				messageDiv.classList.add('hidden');
				
				const formData = new FormData(this);
				const data = Object.fromEntries(formData.entries());
				
				// Validate form
				const validationErrors = validateForm(data);
				if (validationErrors.length > 0) {
					showMessage(validationErrors.join(', '), 'error');
					return;
				}
				
				// Show loading state
				const submitButton = this.querySelector('button[type="submit"]');
				const originalText = submitButton.innerHTML;
				submitButton.innerHTML = '<i data-feather="loader" class="w-4 h-4 animate-spin"></i> Saving...';
				submitButton.disabled = true;
				feather.replace();
				
				try {
					const response = await fetch('/profile/edit', {
						method: 'POST',
						body: formData,
					});

					const result = await response.json();

					if (result.ok) {
						showMessage('Profile updated successfully!', 'success');
						setTimeout(() => {
							window.location.href = '/profile';
						}, 1500);
					} else {
						showMessage(result.message || 'Error updating profile', 'error');
					}
				} catch (error) {
					console.error('Error:', error);
					showMessage('Network error. Please try again.', 'error');
				} finally {
					// Restore button state
					submitButton.innerHTML = originalText;
					submitButton.disabled = false;
					feather.replace();
				}
			});

			function showMessage(text, type) {
				messageDiv.textContent = text;
				messageDiv.className = `mt-4 p-4 rounded-lg ${
					type === 'success' 
						? 'bg-green-600 text-white' 
						: 'bg-red-600 text-white'
				}`;
				messageDiv.classList.remove('hidden');
				
				setTimeout(() => {
					messageDiv.classList.add('hidden');
				}, 5000);
			}

			// Delete account
			const deleteAccountBtn = document.getElementById('deleteAccountBtn');

			deleteAccountBtn.addEventListener('click', async function() {
				if (!confirm('Are you sure you want to delete your account? This action cannot be undone.')) {
					return;
				}
				
				// Show loading state
				const originalContent = this.innerHTML;
				this.innerHTML = '<i data-feather="loader" class="w-4 h-4 animate-spin"></i> Deleting...';
				this.disabled = true;
				feather.replace();
				
				try {
					const response = await fetch('/profile/delete', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json',
						},
					});

					const result = await response.json();

					if (result.ok) {
						alert('Account deleted successfully');
						window.location.href = '/';
					} else {
						alert(result.message || 'Error deleting account');
					}
				} catch (error) {
					console.error('Error deleting account:', error);
					alert('Network error. Please try again.');
				} finally {
					// Restore button state
					this.innerHTML = originalContent;
					this.disabled = false;
					feather.replace();
				}
			});
		</script>
	</body>
</html>